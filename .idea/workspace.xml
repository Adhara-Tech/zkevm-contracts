<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3abd8ff6-3ee9-48a4-b8f8-f2c9890f0092" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/compiled-contracts/Token.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/contracts/interfaces/IToken.sol" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/contracts/lib/Token.sol" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/lib/Token.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.githooks/pre-commit" beforeDir="false" afterPath="$PROJECT_DIR$/.githooks/pre-commit" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/ClaimCompressor.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/ClaimCompressor.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/FflonkVerifier.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/FflonkVerifier.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManager.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManager.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManagerMock.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManagerMock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManagerMockInternalTest.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonRollupManagerMockInternalTest.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonValidiumEtrog.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonValidiumEtrog.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMBridgeV2.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMBridgeV2.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMEtrog.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMEtrog.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMEtrogPrevious.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMEtrogPrevious.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMExistentEtrog.json" beforeDir="false" afterPath="$PROJECT_DIR$/compiled-contracts/PolygonZkEVMExistentEtrog.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/v2/PolygonZkEVMBridgeV2.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/v2/PolygonZkEVMBridgeV2.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/v2/interfaces/IPolygonZkEVMBridgeV2.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/v2/interfaces/IPolygonZkEVMBridgeV2.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/v2/PolygonZkEVMBridgeV2.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/v2/PolygonZkEVMBridgeV2.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/v2/interfaces/IPolygonZkEVMBridgeV2.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/v2/interfaces/IPolygonZkEVMBridgeV2.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tools/createGenesis/new_genesis.json" beforeDir="false" afterPath="$PROJECT_DIR$/tools/createGenesis/new_genesis.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///opt/sdk/go1.23.1" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/package.json" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2o4E3ddwNCOvFRyuYmpLCtxddHA" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "git-widget-placeholder": "polygon-modified-contracts",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/opt/webstorm-241.15989.105/plugins/javascript-plugin/jsLanguageServicesImpl/external"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/contracts/lib" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/contracts/interfaces" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="zkevm-contracts" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="zkevm-contracts" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>